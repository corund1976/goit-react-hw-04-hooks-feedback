{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/Buttons/Buttons.module.css","components/Container/Container.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Container/Container.jsx","components/Section/Section.jsx","components/FeedbackOptions/Buttons/Buttons.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","section","Buttons","options","onLeaveFeedback","map","item","buttonsListItem","type","button","name","onClick","charAt","toUpperCase","slice","FeedbackOptions","buttonsList","Statistics","good","neutral","bad","total","positivePercentage","statisticList","statisticItem","Notification","message","App","state","stateUpdate","event","setState","prevState","target","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","parseInt","keys","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1eb625b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticList\":\"Statistics_statisticList__1EeL7\",\"statisticItem\":\"Statistics_statisticItem__2J6gm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3x0x1\",\"title\":\"Section_title__1mlx-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsListItem\":\"Buttons_buttonsListItem__1R7yW\",\"button\":\"Buttons_button__2U1sM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3TY9f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsList\":\"FeedbackOptions_buttonsList__2pnb9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__3p0NM\"};","import s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n    return (\r\n        <div className={s.container}>\r\n            {children}\r\n        </div>);\r\n}\r\n\r\nexport default Container;","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n}\r\n\r\nexport default Section;","import PropTypes from 'prop-types';\r\nimport s from './Buttons.module.css';\r\n\r\nfunction Buttons({ options, onLeaveFeedback }) {\r\n  return (\r\n    options.map(item => \r\n      <li className={s.buttonsListItem} key={item}>\r\n        <button\r\n          type=\"button\"\r\n          className={s.button}\r\n          name={item}\r\n          onClick={onLeaveFeedback}>\r\n          {item.charAt(0).toUpperCase() + item.slice(1)}\r\n          {/* p:first-letter{\r\n            text-transform:capitalize;\r\n            } */}\r\n        </button>\r\n      </li>\r\n    )\r\n  );\r\n};\r\n\r\nButtons.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Buttons;","import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\nimport Buttons from './Buttons';\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <ul className={s.buttonsList}>\r\n      <Buttons options={options} onLeaveFeedback={onLeaveFeedback}></Buttons>            \r\n    </ul>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <ul className={s.statisticList}>\r\n      <li className={s.statisticItem}>Good: { good }</li>\r\n      <li className={s.statisticItem}>Neutral: { neutral }</li>\r\n      <li className={s.statisticItem}>Bad: { bad }</li>\r\n      <li className={s.statisticItem}>Total: { total }</li>\r\n      <li className={s.statisticItem}>Positive feedback: { positivePercentage }%</li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n}\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nfunction Notification({ message }) {\r\n  return (\r\n    <p className={s.message}>{message}</p>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Notification;","import { Component } from 'react';\nimport './App.css';\nimport Container from './components/Container';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  // stateUpdate = ({target:{name}}) => {\n  stateUpdate = event => {\n    // const currentFeedback = event.target.name;\n    \n    // this.setState(prevState => {\n    //   return {[currentFeedback]: prevState[currentFeedback] + 1};\n    // });\n    this.setState(prevState => ({\n      [event.target.name]: prevState[event.target.name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return (Object.values(this.state).reduce((acc, item) => acc + item));\n  };\n  // countTotalFeedback = () => \n  //   (Object.values(this.state).reduce((acc, item) => acc + item));\n\n  countPositiveFeedbackPercentage = () => {\n    return (parseInt(this.state.good / this.countTotalFeedback() * 100));\n  };\n  \n  render() {\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.stateUpdate} />\n          \n        </Section>\n        <Section title=\"Statistics\">\n          {!this.countTotalFeedback()\n            ?\n            <Notification message=\"No feedback given\" />\n            :\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()} />\n          }\n        </Section>\n      </Container>\n    );\n  };\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}